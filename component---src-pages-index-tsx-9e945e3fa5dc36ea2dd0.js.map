{"version":3,"file":"component---src-pages-index-tsx-9e945e3fa5dc36ea2dd0.js","mappings":"+JAIMA,EAAaC,EAAAA,QAAAA,KAAAA,WAAH,6DAAGA,CAAH,oDAKVC,EAAUD,EAAAA,QAAAA,GAAAA,WAAH,0DAAGA,CAAH,uEAMPE,EAAWF,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,uCAKRG,EAAOH,EAAAA,QAAAA,IAAAA,WAAH,uDAAGA,CAAH,uBAIJI,EAAUJ,EAAAA,QAAAA,KAAAA,WAAH,0DAAGA,CAAH,qDAMPK,EAAUL,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,iCAoDb,UA/CkB,SAAC,GAAc,IAAZM,EAAW,EAAXA,KAEbC,EAAOD,EAAKE,QAAQC,MAAMC,KAAI,SAAAC,GAAI,OACxC,gBAACT,EAAD,CAAUU,IAAKD,EAAKE,IAClB,gBAACV,EAAD,KAAOQ,EAAKG,KAAZ,IAAkB,gBAACV,EAAD,KAAUO,EAAKI,UAAWJ,EAAKK,KAA/B,MAClB,gBAACX,EAAD,KAAUM,EAAKM,MAAf,UACA,gBAACZ,EAAD,KAAUM,EAAKO,UAIXC,EAAeb,EAAKc,gBAAgBX,MAAMC,KAAI,SAAAC,GAAI,OACtD,gBAACT,EAAD,CAAUU,IAAKD,EAAKE,IAClB,gBAACV,EAAD,KAAOQ,EAAKG,KAAZ,IAAkB,gBAACV,EAAD,KAAUO,EAAKI,UAAf,OAClB,gBAACV,EAAD,KAAUM,EAAKU,UACf,gBAAChB,EAAD,KAAUM,EAAKO,UAIbI,EAAShB,EAAKiB,UAAUd,MAAMC,KAAI,SAAAC,GAAI,OAC1C,gBAACT,EAAD,CAAUU,IAAKD,EAAKE,IAClB,gBAACV,EAAD,KAAOQ,EAAKG,KAAZ,IAAkB,gBAACV,EAAD,KAAUO,EAAKI,UAAWJ,EAAKK,OACjD,gBAACX,EAAD,KAAUM,EAAKO,UAIbM,EAAQlB,EAAKmB,SAAShB,MAAMC,KAAI,SAAAC,GAAI,OACxC,gBAACT,EAAD,CAAUU,IAAKD,EAAKE,IAClB,gBAACV,EAAD,KAAOQ,EAAKG,KAAZ,IAAkB,gBAACV,EAAD,KAAUO,EAAKI,UAAWJ,EAAKK,OACjD,gBAACX,EAAD,KAAUM,EAAKO,UAInB,OACE,gBAACnB,EAAD,KACE,qDACA,gBAACE,EAAD,aACCM,EACD,gBAACN,EAAD,qBACCkB,EACD,gBAAClB,EAAD,eACCqB,EACD,gBAACrB,EAAD,cACCuB","sources":["webpack://brew-father-inventory/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst StyledMain = styled.main`\n  padding: 4rem;\n  font-family: Helvetica, sans-serif;\n`\n\nconst Heading = styled.h1`\n  color: #663399;\n  border-bottom: 1px solid #663399;\n  padding-bottom: 6px;\n`\n\nconst ListItem = styled.div`\n  color: #171717;\n  margin-bottom: 1rem;\n`\n\nconst Bold = styled.div`\n  font-weight: bold;\n`\n\nconst SubName = styled.span`\n  font-weight: 300;\n  opacity: .6;\n  padding-left: .25rem;\n`\n\nconst Content = styled.div`\n  font-weight: 300;\n  opacity: .6;\n`\n\nconst IndexPage = ({ data }) => {\n\n  const Hops = data.allHops.nodes.map(item => (\n  <ListItem key={item.id}>\n    <Bold>{item.name} <SubName>{item.inventory}{item.unit}g</SubName></Bold>\n    <Content>{item.alpha} alpha</Content>\n    <Content>{item.type}</Content>\n  </ListItem>\n  ))\n\n  const Fermentables = data.allFermentables.nodes.map(item => (\n    <ListItem key={item.id}>\n      <Bold>{item.name} <SubName>{item.inventory}kg</SubName></Bold>\n      <Content>{item.supplier}</Content>\n      <Content>{item.type}</Content>\n    </ListItem>\n    ))\n\n  const Yeasts = data.allYeasts.nodes.map(item => (\n    <ListItem key={item.id}>\n      <Bold>{item.name} <SubName>{item.inventory}{item.unit}</SubName></Bold>\n      <Content>{item.type}</Content>\n    </ListItem>\n    ))\n\n  const Miscs = data.allMiscs.nodes.map(item => (\n    <ListItem key={item.id}>\n      <Bold>{item.name} <SubName>{item.inventory}{item.unit}</SubName></Bold>\n      <Content>{item.type}</Content>\n    </ListItem>\n    ))\n\n  return (\n    <StyledMain>\n      <title>BrewFather Inventory</title>\n      <Heading>Hops</Heading>\n      {Hops}\n      <Heading>Fermentables</Heading>\n      {Fermentables}\n      <Heading>Yeasts</Heading>\n      {Yeasts}\n      <Heading>Miscs</Heading>\n      {Miscs}\n    </StyledMain>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query DataQuery {\n    allFermentables {\n      nodes {\n        name\n        inventory\n        supplier\n        type\n        id\n      }\n    }\n    allHops {\n      nodes {\n        name\n        type\n        use\n        alpha\n        id\n        inventory\n      }\n    }\n    allMiscs {\n      nodes {\n        inventory\n        name\n        type\n        use\n        id\n        unit\n      }\n    }\n    allYeasts {\n      nodes {\n        attenuation\n        id\n        inventory\n        name\n        type\n        unit\n      }\n    }\n  }\n`"],"names":["StyledMain","styled","Heading","ListItem","Bold","SubName","Content","data","Hops","allHops","nodes","map","item","key","id","name","inventory","unit","alpha","type","Fermentables","allFermentables","supplier","Yeasts","allYeasts","Miscs","allMiscs"],"sourceRoot":""}